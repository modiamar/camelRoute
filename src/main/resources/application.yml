spring :
  profiles :
    active : dev

server:
  port : 8095

camel:
  springboot:
    shutdownTimeout : 2
    health.indicator.enabled: true

management:
  security:
    enable: false

---
spring:
  profiles: dev
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/localDB
    username: postgres
    password: password
  mail:
    host: smtp.gmail.com
    port: 587
    username: mailsender1256@gmail.com
    password: password
    properties.mail.smtp.auth:  true
    properties.mail.smtp.starttls.enable: true
    mailTo: mailsender1256@gmail.com
    mailFrom: mailsender1256@gmail.com
  camel:
      external :
        properties :
          inputFile : file:data/input?delete=true&readLock=none&moveFailed=error
          outputFile : file:data/output
          timerTime: kafka:inputItemTopic?brokers=localhost:9092&groupId=itemDev&autoOffsetReset=earliest&consumersCount=1
          jdbcDataSource: jdbc:dataSource
          successRoute: file:data/output?fileName=Success.txt
          healthRoute: timer:healthRoute?period=10s
          healthEndpoint: http://localhost:8095/health

fromRoute: kafka:inputItemTopic?brokers=localhost:9092&groupId=itemDev&autoOffsetReset=earliest&consumersCount=1
toRoute: log:?level=INFO&showBody=true
errorRoute: kafka:errorTopic?brokers=localhost:9092


message: DEV ENV


---
spring:
  profiles: mock
  camel:
      external :
        properties :
          inputFile : file:data/input?delete=true&readLock=none
          outputFile : mock:output
          timerTime: direct:input
          jdbcDataSource: mock:output1
          successRoute: mock:output2
          healthRoute: direct:health
          healthEndpoint: http://localhost:8095/health
  mail:
      host: smtp.gmail.com
      port: 587
      username: mailsender1256@gmail.com
      password:
      properties.mail.smtp.auth:  true
      properties.mail.smtp.starttls.enable: true
      mailTo: mailsender1256@gmail.com
      mailFrom: mailsender1256@gmail.com

fromRoute: direct:input
toRoute: mock:output
errorRoute: mock:output1


---
spring:
  profiles: stage
  datasource:
      driver-class-name: org.postgresql.Driver
      url: jdbc:postgresql://localhost:5432/localDB
      username: postgres
      password: password
  mail:
      host: smtp.gmail.com
      port: 587
      username: mailsender1256@gmail.com
      password: password
      properties.mail.smtp.auth:  true
      properties.mail.smtp.starttls.enable: true
      mailTo: mailsender1256@gmail.com
      mailFrom: mailsender1256@gmail.com
  camel:
      external :
        properties :
          inputFile : file:data/input?delete=true&readLock=none&moveFailed=error
          outputFile : file:data/output
          timerTime: kafka:inputItemTopic?brokers=localhost:9092&groupId=itemDev&autoOffsetReset=earliest&consumersCount=1
          jdbcDataSource: jdbc:dataSource
          successRoute: file:data/output?fileName=Success.txt
          healthRoute: timer:healthRoute?period=10s
          healthEndpoint: http://localhost:8095/health

fromRoute: kafka:inputItemTopic?brokers=localhost:9092&groupId=itemDev&autoOffsetReset=earliest&consumersCount=1
toRoute: log:?level=INFO&showBody=true
errorRoute: kafka:errorTopic?brokers=localhost:9092

message: STAGE ENV
---

spring:
  profiles: prod
  datasource:
      driver-class-name: org.postgresql.Driver
      url: jdbc:postgresql://localhost:5432/localDB
      username: postgres
      password: password
  mail:
    host: smtp.gmail.com
    port: 587
    username: mailsender1256@gmail.com
    password: password
    properties.mail.smtp.auth:  true
    properties.mail.smtp.starttls.enable: true
    mailTo: mailsender1256@gmail.com
    mailFrom: mailsender1256@gmail.com


  camel:
      external :
        properties :
          inputFile : file:data/input?delete=true&readLock=none&moveFailed=error
          outputFile : file:data/output
          timerTime: kafka:inputItemTopic?brokers=localhost:9092&groupId=itemDev&autoOffsetReset=earliest&consumersCount=1
          jdbcDataSource: jdbc:dataSource
          successRoute: file:data/output?fileName=Success.txt
          healthRoute: timer:healthRoute?period=10s
          healthEndpoint: http://localhost:8095/health

fromRoute: kafka:inputItemTopic?brokers=localhost:9092&groupId=itemDev&autoOffsetReset=earliest&consumersCount=1
toRoute: log:?level=INFO&showBody=true
errorRoute: kafka:errorTopic?brokers=localhost:9092

message: PROD ENV